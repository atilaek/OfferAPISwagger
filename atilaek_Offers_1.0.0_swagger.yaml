openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/atilaek/Offers/1.0.0
info:
  description: |
    This is a demo Offers  server developed by atilaek.  
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "1.0.0"
  title: Swagger Offers
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: atilaek@atilek.atilaek
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: offer
    description: Everything about Offers for merchants
    externalDocs:
      description: description field for Offers
      url: 'http://swagger.io'
paths:
  /offer:
    post:
      tags:
        - offer
      summary: Add a new offer for merchant
      operationId: addOffer
      responses:
        '401':
          description: Not authenticated
        '405':
          description: Invalid input
      security:
        - api_key: []
      requestBody:
        $ref: '#/components/requestBodies/Offer'
    put:
      tags:
        - offer
      summary: Update an existing offer
      operationId: updateOffer
      responses:
        '400':
          description: Invalid ID supplied
        '401':
          description: Not authenticated
        '404':
          description: Offer not found
        '405':
          description: Validation exception
      security:
        - api_key: []
      requestBody:
        $ref: '#/components/requestBodies/Offer'
  '/offer/{offerId}':
    get:
      tags:
        - offer
      summary: Find offer by ID
      description: Returns a single offer
      operationId: getOfferById
      parameters:
        - name: offerId
          in: path
          description: ID of offer to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
            application/xml:
              schema:
                $ref: '#/components/schemas/Offer'
        '400':
          description: Invalid ID supplied
        '401':
          description: Not authenticated
        '404':
          description: Offer not found
      security:
        - api_key: []
    delete:
      tags:
        - offer
      summary: Deletes a offer
      operationId: deleteOffer
      parameters:
        - name: api_key
          in: header
          required: false
          schema:
            type: string
        - name: offerId
          in: path
          description: Offer id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '401':
          description: Not authenticated
        '404':
          description: Offer not found
      security:
        - api_key: []
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    Offer:
      type: object
      required:
        - name
        - price
      properties:
        id:
          type: "integer"
          format: "int64" 
        name:
          type: "string"
          example: "Chip - Orange Merhcant"
        price:
          type: "object"
          required:
          - "amount"
          - "currency"
          properties:
            amount:
              type: "number"
              format: "double" 
              example: "6.66"
            currency:
              type: "string"
              example: "NOK"
          xml:
            name: "Price" 
        description:
          type: "string"
          example: "Offer for Orange Merhcant per a chip"
        expirationDate:
          type: "string"
          format: "date-time"
          example: "2017-07-21T17:32:28Z"
        cancelled:
          type: "boolean"
          default: false
      xml:
        name: Offer
  requestBodies:
    Offer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Offer'
        application/xml:
          schema:
            $ref: '#/components/schemas/Offer'
      description: Offer object that needs to be added to the store
      required: true
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header